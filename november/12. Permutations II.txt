//Commit comment
class Solution {
public:
    vector<vector<int>> ans;
    map<vector<int>,int> m;
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        findperms(nums,0,nums.size());
        return ans;
    }
    void findperms(vector<int> nums,int start,int end)
    {
        int temp;
        if(m[nums]==0)
        {
            m[nums]++;
            ans.push_back(nums);
        }
        for(int i=start;i<end-1;i++)
        {
            for(int j=i+1;j<end;j++)
            {
                temp = nums[i];
                nums[i]=nums[j];
                nums[j]=temp;
                findperms(nums,i+1,end);
                temp = nums[i];
                nums[i]=nums[j];
                nums[j]=temp;
            }
        }
    }
};